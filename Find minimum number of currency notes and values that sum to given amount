void countCurrency(int amount)
{
    int notes[9] = { 2000, 500, 200, 100,
                     50, 20, 10, 5, 1 };
    int noteCounter[9] = { 0 };
    
    // count notes using Greedy approach
    for (int i = 0; i < 9; i++) {
        if (amount >= notes[i]) {
            noteCounter[i] = amount / notes[i];
            amount = amount % notes[i];
        }
    }
    
    // Print notes
    cout << "Currency Count ->" << endl;
    for (int i = 0; i < 9; i++) {
        if (noteCounter[i] != 0) {
            cout << notes[i] << " : " 
                << noteCounter[i] << endl;
        }
    }
}

// Driver function
int main()
{
    int amount = 868;
    countCurrency(amount);
    return 0;
}------------------------------------------------------------------------------------------------------------->
int amount = 2456;
vector<int> notes = {2000, 500, 200, 100, 50, 20, 10, 5, 1};

cout << "Currency  Count\n";
for (int note : notes) {
    if (amount >= note) {
        int count = amount / note;  // How many times this note fits in amount
        amount -= count * note;  // Reduce the total amount accordingly
        cout << note << " : " << count << endl;
    }
}
