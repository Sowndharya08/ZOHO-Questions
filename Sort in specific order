class Solution {
  public:
    void sortIt(vector<long long>& arr) {
      vector<int>even,odd;
      
      for(int n:arr){
           if(n%2==0) even.push_back(n);
           else
           odd.push_back(n);
          
      }
      sort(odd.rbegin(),odd.rend());
      sort(even.begin(),even.end());
      int i=0;
      for(int n:odd){
        arr[i++]=n;
      }
      for(int n:even){
         arr[i++]=n;
      }
      
    }
};
--------------------------------------------------------------------------------->using CUSTOM COMAPARATOR..............>
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

bool customComparator(int a, int b) {
    if ((a % 2 == 1) && (b % 2 == 1)) return a > b; // Descending for odds
    if ((a % 2 == 0) && (b % 2 == 0)) return a < b; // Ascending for evens
    return (a % 2 == 1); // Keep odds first
}

vector<int> sortArray(vector<int>& arr) {
    sort(arr.begin(), arr.end(), customComparator);
    return arr;
}

int main() {
    vector<int> arr = {1, 2, 3, 5, 4, 7, 10};
    arr = sortArray(arr);
    
    for (int num : arr) cout << num << " ";  // Output: 7 5 3 1 2 4 10
    cout << endl;
    
    return 0;
}
